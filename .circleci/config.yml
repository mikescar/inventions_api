version: 2
machine:
  services:
    - docker
jobs:
  build:
    working_directory: ~/inventions-api
    docker: # run the steps with Docker
      - image: mikescar/heroku-ruby-2.5
        environment:
          RAILS_ENV: test
          DATABASE_URL_TEST: postgres://postgres@localhost:5432/postgres
      - image: postgres:10.4
    steps:
      - checkout # git checkout to working directory

      # Restore bundle cache
      - restore_cache:
          keys:
            - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-demo-bundle-v2-

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      - run: mkdir ~/rspec

      # Store bundle cache
      - save_cache:
          key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace

      - run:
          name: Run rspec
          command: bundle exec rspec --format progress --format RspecJunitFormatter -o ~/rspec/rspec.xml
          when: always

      - store_test_results:
          path: ~/rspec

      - setup_remote_docker

      # TODO This should go into custom primary image
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
            mv /tmp/docker/* /usr/bin

      - run:
          name: Build and push Docker image
          command: |
            TAG="registry.heroku.com/${APP_NAME_PRODUCTION}/web"
            docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
            echo "docker login exit code: $?"
            docker build --rm=false -t $TAG:latest .
            IMAGE_ID=$(docker inspect $TAG --format={{.Id}})
            echo "Image ID is: $IMAGE_ID"
            docker push $TAG
            curl -n -X PATCH https://api.heroku.com/apps/${APP_NAME_PRODUCTION}/formation \
              -d '{
              "updates": [
                {
                  "type": "web",
                  "docker_image": "$IMAGE_ID"
                }
              ]
            }' \
              -H "Content-Type: application/json" \
              -H "Accept: application/vnd.heroku+json; version=3.docker-releases"
