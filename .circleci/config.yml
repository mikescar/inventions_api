version: 2
machine:
  services:
    - docker
jobs:
  build:
    working_directory: ~/inventions-api
    docker: # run the steps with Docker
      - image: mikescar/heroku-ruby-2.5:latest
        environment:
          RAILS_ENV: test
          DATABASE_URL_TEST: postgres://postgres@localhost:5432/postgres
      - image: postgres:10.4
    steps:
      - checkout # git checkout to working directory

      # Restore bundle cache
      - restore_cache:
          keys:
            - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-demo-bundle-v2-

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      - run:
          name: Make test results directory
          command: mkdir ~/rspec

      # Store bundle cache
      - save_cache:
          key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - run:
          name: Wait for postgres image
          command: |
            TIMEOUT=10
            until psql $DATABASE_URL_TEST "select 1" > /dev/null 2>&1 || [ $TIMEOUT -eq 0 ]; do
              echo "Waiting for postgres server, $((TIMEOUT--)) remaining attempts..."
              sleep 1
            done

      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace

      - run:
          name: Run rspec
          command: bundle exec rspec --format progress --format RspecJunitFormatter -o ~/rspec/rspec.xml
          when: always

      - store_test_results:
          path: ~/rspec

      - setup_remote_docker

      - run:
          name: Build and push Docker image
          command: ./bin/docker-deploy.sh
